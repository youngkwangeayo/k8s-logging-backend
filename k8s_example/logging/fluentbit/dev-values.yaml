# 노드마다 수집
kind: DaemonSet

# 원하는 바이너리 버전 고정
image:
  repository: cr.fluentbit.io/fluent/fluent-bit
  tag: "4.0.7"
  pullPolicy: IfNotPresent

serviceAccount:
  create: true
rbac:
  create: true

# 개발 기본 리소스
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    memory: 256Mi

# 모든 태인트 노드까지 커버(선택)
tolerations:
  - operator: "Exists"

# 로그 레벨/플러시
logLevel: info
flush: 1
metricsPort: 2020

# (안전) fluent-bit 자신의 로그는 수집 제외(필터 단계)
podAnnotations:
  fluentbit.io/exclude: "true"

# === 클래식 모드 설정 ===
config:
  service: |
    [SERVICE]
        Daemon Off
        Flush {{ .Values.flush }}
        Log_Level {{ .Values.logLevel }}
        Parsers_File /fluent-bit/etc/parsers.conf
        # Parsers_File /fluent-bit/etc/conf/custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port {{ .Values.metricsPort }}
        Health_Check On

  # containerd: /var/log/containers/*.log + CRI/멀티라인 파서
  inputs: |
    [INPUT]
        Name              tail
        Path              /var/log/containers/*_dev-aiagent_*.log
        Exclude_Path      /var/log/containers/*fluent-bit*.log
        Tag               kube.*
        multiline.parser  docker, cri
        Mem_Buf_Limit     10MB
        Skip_Long_Lines   On
        Refresh_Interval  10

    # (선택) kubelet systemd 로그 - 비활성화
    #[INPUT]
    #    Name            systemd
    #    Tag             host.*
    #    Systemd_Filter  _SYSTEMD_UNIT=kubelet.service
    #    Read_From_Tail  On

  filters: |
    [FILTER]
        Name                  kubernetes
        Match                 kube.*
        Merge_Log             On
        Keep_Log              Off
        K8S-Logging.Parser    On
        K8S-Logging.Exclude   On
        Annotations           Off
        Labels                Off

  outputs: |
    # logging-backend로 HTTP POST 전송
    [OUTPUT]
        Name          http
        Match         kube.*
        Host          logging-backend-service.logging
        Port          8080
        URI           /logs
        Format        json
        Header        Content-Type application/json
    # 1단계: stdout로 보기 (줄바꿈/들여쓰기)
    [OUTPUT]
        Name   stdout
        Match  *
        Format json_pretty

    # 2단계: 예시) Elasticsearch 전환 시 주석 해제
    # [OUTPUT]
    #     Name            es
    #     Match           kube.*
    #     Host            elasticsearch-master.logging.svc
    #     Port            9200
    #     Logstash_Format On
    #     Retry_Limit     False

  # 멀티라인 파서
  # customParsers: |
  #   [PARSER]
  #       Name docker_no_time
  #       Format json
  #       Time_Keep Off
  #       Time_Key time
  #       Time_Format %Y-%m-%dT%H:%M:%S.%L

# === containerd에 필요한 볼륨만 ===
daemonSetVolumes:
  - name: varlog
    hostPath:
      path: /var/log
daemonSetVolumeMounts:
  - name: varlog
    mountPath: /var/log

# 실행 커맨드/인자(차트 기본 유지)
# command/args는 차트 기본값으로 fluent-bit.conf 사용
